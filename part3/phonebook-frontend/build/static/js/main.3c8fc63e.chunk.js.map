{"version":3,"sources":["components/NotificationCard.js","components/FilteredPersons.js","components/TextInput.js","components/Button.js","services/Phonebook.js","App.js","index.js"],"names":["NotificationCard","notification","type","notificationClassName","notificationTitle","className","message","FilteredPersons","persons","nameFilter","handleDeletePerson","personsToShow","filter","person","name","toLowerCase","includes","map","number","onClick","id","TextInput","labelText","value","handleInput","onChange","Button","handleClick","text","baseURL","readContacts","a","axios","get","response","data","addContact","newContact","post","updateContact","updatedContact","put","deleteContact","contactID","delete","Phonebook","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setNameFilter","setNotification","useEffect","then","contacts","e","target","preventDefault","some","alert","oldContact","find","window","confirm","responseData","setTimeout","newPerson","contactData","newPersons","concat","personToDelete","catch","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3c8fc63e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst NotificationCard = ({ notification }) => {\r\n    if (notification.type === null) {\r\n        return null;\r\n    }\r\n    \r\n    const notificationClassName = `notification-${notification.type}`;\r\n    const notificationTitle = \r\n        ( notification.type === 'success' ) \r\n            ? 'Success!' \r\n            : ( notification.type === 'error' )\r\n                ? 'Error!'\r\n                : notification.type ;\r\n\r\n    return (\r\n        <div className={`notification-card ${notificationClassName}`} >\r\n            <div className={'notification-title'} >{notificationTitle}</div>\r\n            <div className={'notification-message'} >{notification.message}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NotificationCard;","import React from \"react\";\r\n\r\nconst FilteredPersons = ({persons, nameFilter, handleDeletePerson}) => {\r\n    const personsToShow = persons.filter(person => (\r\n        person.name.toLowerCase()\r\n        .includes(nameFilter.toLowerCase())\r\n        ));\r\n    \r\n    return (\r\n      <>\r\n        {personsToShow.map(\r\n          person => (\r\n            <p key={person.id}>\r\n              {person.name} {person.number} <button onClick={() => { handleDeletePerson(person) }} >delete</button>\r\n            </p>\r\n          ))}\r\n      </>\r\n    );\r\n  \r\n};\r\n\r\nexport default FilteredPersons;","import React from \"react\";\r\n\r\nconst TextInput = ({ labelText, value, handleInput }) => {\r\n    return (\r\n      <div>\r\n          {labelText} <input onChange={handleInput} value={value} />\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default TextInput;","import React from \"react\";\r\n\r\nconst Button = ({ handleClick, text }) => {\r\n  return (\r\n    <div>\r\n      <button onClick={handleClick} type=\"submit\">{text}</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Button;","import axios from 'axios';\r\n\r\nconst baseURL = '/api/persons';\r\n\r\nconst readContacts = async () => {\r\n    const response = await axios.get(baseURL);\r\n    return response.data;\r\n};\r\n\r\nconst addContact = async (newContact) => {\r\n    const response = await axios.post(baseURL, newContact);\r\n    return response.data;\r\n};\r\n\r\nconst updateContact = async (updatedContact) => {\r\n    const response = await axios.put(`${baseURL}/${updatedContact.id}`, updatedContact);\r\n    return response.data;\r\n};\r\n\r\nconst deleteContact = async (contactID) => {\r\n    const response = await axios.delete(`${baseURL}/${contactID}`);\r\n    return response.data;\r\n};\r\n\r\nconst Phonebook = { readContacts, addContact, updateContact, deleteContact };\r\n\r\nexport default Phonebook;","import React, { useState, useEffect } from 'react';\nimport NotificationCard from './components/NotificationCard';\nimport FilteredPersons from './components/FilteredPersons';\nimport TextInput from './components/TextInput';\nimport Button from './components/Button';\nimport Phonebook from './services/Phonebook';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]); \n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [nameFilter, setNameFilter] = useState('');\n  const [notification, setNotification] = useState({ type: null, message: '' });\n\n  useEffect(() => {\n    Phonebook.readContacts()\n      .then(contacts => setPersons(contacts));\n  }, []);\n\n  const handleNameFilterInput = (e) => {\n    setNameFilter(e.target.value);\n  };\n\n  const handleNameInput = (e) => {\n    setNewName(e.target.value);\n  };\n\n  const handleNumberInput = (e) => {\n    setNewNumber(e.target.value);\n  };\n\n  const handleAddPerson = (e) => {\n    e.preventDefault();\n    if (persons.some(person => person.name === newName)) {\n      if (persons.some(person => person.number === newNumber)) {\n        alert(`${newName} is already added to phonebook`);\n      } else {\n        const oldContact = persons.find(person => person.name === newName);\n        if (window.confirm(`${newName} is already added to phonebook, replace the old number (${oldContact.number}) with the new number (${newNumber}) ?`)) {\n          const updatedContact = { ...oldContact, number: newNumber };\n          Phonebook.updateContact(updatedContact)\n            .then(responseData => {\n              setPersons(persons.map(person => (person.name === responseData.name) ? responseData : person));\n              setNotification({ type: 'success', message: `Updated contact details for ${responseData.name}` });\n              setTimeout(() => {\n                setNotification({ type: null, message: '' });\n              }, 5000); // reset notification after 5 seconds\n            });\n        }\n      }\n      setNewName('');\n      setNewNumber('')\n      return null;\n    }\n    \n    const newPerson = {\n      name: newName,\n      number: newNumber,\n    }\n\n    Phonebook.addContact(newPerson)\n      .then(contactData => {\n        const newPersons = persons.concat(contactData);\n        setPersons(newPersons);\n        setNotification({ type: 'success', message: `Added contact details of ${contactData.name}` });\n        setTimeout(() => {\n          setNotification({ type: null, message: '' });\n        }, 5000); // reset notification after 5 seconds\n        setNewName('');\n        setNewNumber('');\n      });\n  };\n\n  const handleDeletePerson = (personToDelete) => {\n    if (window.confirm(`Delete ${personToDelete.name} ?`)) {\n      const newPersons = persons.filter(person => person.id !== personToDelete.id);\n      setPersons(newPersons);\n      Phonebook.deleteContact(personToDelete.id)\n        .then(() => {\n          setNotification({ type: 'success', message: `Deleted contact details for ${personToDelete.name}` });\n          setTimeout(() => {\n            setNotification({ type: null, message: '' });\n          }, 5000); // reset notification after 5 seconds\n        })\n        .catch(() => {\n          setNotification({ type: 'error', message: `Contact details for ${personToDelete.name} has already been removed from server!` });\n          setTimeout(() => {\n            setNotification({ type: null, message: '' });\n          }, 5000); // reset notification after 5 seconds\n        });\n    };\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <NotificationCard notification={notification} />\n      <TextInput labelText=\"filter shown with \" handleInput={handleNameFilterInput} value={nameFilter} />\n      <h2>add a new</h2>\n      <form>\n        <TextInput labelText=\"name: \" value={newName} handleInput={handleNameInput} />\n        <TextInput labelText=\"number: \" value={newNumber} handleInput={handleNumberInput} />\n        <Button handleClick={handleAddPerson} text=\"add\" />\n      </form>\n      <h2>Numbers</h2>\n      <FilteredPersons persons={persons} nameFilter={nameFilter} handleDeletePerson={handleDeletePerson} />\n    </div>\n  );\n};\n\nexport default App;","import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}